/****************************************************************************
 * C# to Qt portation, Linux developing                                     *
 * flex/bison DXF parser                                                    *
 * Copyright (C) 2015-2019 by Eduard Kalinowski                             *
 * Germany, Lower Saxony, Hanover                                           *
 * eduard_kalinowski@yahoo.de                                               *
 *                                                                          *
 * C# project CNC-controller-for-mk1                                        *
 * https://github.com/selenur/CNC-controller-for-mk1                        *
 *                                                                          *
 * The Qt project                                                           *
 * https://github.com/eduard-x/cnc-qt                                       *
 *                                                                          *
 * CNC-Qt is free software; may be distributed and/or modified under the    *
 * terms of the GNU General Public License version 3 as published by the    *
 * Free Software Foundation and appearing in the file LICENSE_GPLv3         *
 * included in the packaging of this file.                                  *
 *                                                                          *
 * This program is distributed in the hope that it will be useful,          *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of           *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *
 * GNU General Public License for more details.                             *
 *                                                                          *
 * You should have received a copy of the GNU Lesser General Public         *
 * License along with CNC-Qt. If not, see  http://www.gnu.org/licenses      *
 ****************************************************************************/

%{

extern int dxflineno;

%}

/* C++ parser interface */
%skeleton "lalr1.cc"
%require  "3.0"

// The parsing context.
%parse-param { dxf::driver& checker }
%lex-param   { dxf::driver& checker }

%initial-action
{
    // Initialize the initial location.
    @$.begin.filename = @$.end.filename = &checker.file;
};

%locations

/* increase usefulness of error messages */
%define parse.error verbose
%define api.namespace {dxf}
/* assert correct cleanup of semantic value objects */
%define parse.assert

%define api.value.type variant
%define api.token.prefix {T_}



%code requires {
    #include <QString>
    #include <QChar>
    #include <QDebug>
    #include <QVector>
    
    #include <stdexcept>
    #include <string>

    #include "GData.h"
    
    #include "location.hh"

    namespace dxf {
        class scanner;
        class driver;
    };
}



%token STR
%token SYM
%token INT
%token FLOAT
%token VARIABLE

%token InvalidCharacter

%token                  END     0   "end of file"



%type <int> INT
%type <float> FLOAT
%type <char> SYM
%type <std::string> STR VARIABLE


%code {
//     #include "Settings.h"
    #include "DXFScanner.h"

// init of first dxf data
// ParserData *dxf_data;// = new GerberData();
}

%start parse_dxf

%%

parse_dxf: 
        | lines
        ;


lines: line lines
        | line
        ;


line:   STR
        {
            qInfo() << QString($1.c_str());
        }
        | FLOAT
        {
            qInfo() << $1;
        }
        | VARIABLE 
        {
            qInfo() << QString($1.c_str());
        }
        | SYM 
        {
        }
        | INT 
        {
            qInfo() << $1;
        }
        ;

%%

void dxf::parser::error ( const dxf::parser::location_type& l, const std::string& m)
{
    checker.error (l, m);
}
